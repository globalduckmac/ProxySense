#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Basic Authentication —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.
"""
import os
import time
import subprocess
import sys
import threading

def log(message):
    print(f"[DEMO] {message}")

def run_command(cmd):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É."""
    log(f"–í—ã–ø–æ–ª–Ω—è—é: {cmd}")
    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
    if result.stdout:
        print(result.stdout)
    if result.stderr:
        print(f"STDERR: {result.stderr}")
    return result.returncode == 0

def demo_basic_auth():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Basic Auth —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞."""
    
    log("üîê –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø BASIC AUTHENTICATION")
    log("=" * 50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    log("üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ backend/config.py:")
    try:
        with open('backend/config.py', 'r') as f:
            lines = f.readlines()
            for i, line in enumerate(lines):
                if 'BASIC_AUTH' in line:
                    print(f"   {i+1:3}: {line.strip()}")
    except Exception as e:
        log(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞: {e}")
    
    print()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –≤–∫–ª—é—á–µ–Ω–∏–µ Basic Auth
    log("üîß –í–∫–ª—é—á–∞–µ–º Basic Authentication...")
    if run_command("python3 enable_basic_auth.py enable demo password123"):
        log("‚úÖ Basic Auth –≤–∫–ª—é—á–µ–Ω–∞")
    else:
        log("‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è Basic Auth")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π .env —Ñ–∞–π–ª
    log("üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env —Ñ–∞–π–ª–∞:")
    try:
        with open('.env', 'r') as f:
            content = f.read()
            print(content)
    except FileNotFoundError:
        log("‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print()
    
    log("‚ÑπÔ∏è  –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
    log("   –í Replit —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤")
    
    # –ñ–¥–µ–º —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–µ–ª –∏–∑–º–µ–Ω–µ–Ω–∏—è
    log("‚è±Ô∏è  –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞...")
    time.sleep(5)
    
    log("üß™ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å Basic Auth:")
    log("   1. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")
    log("   2. –î–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞/–ø–∞—Ä–æ–ª—è")
    log("   3. –í–≤–µ–¥–∏—Ç–µ: demo / password123")
    log("   4. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
    
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –æ—Ç–∫–ª—é—á–∏—Ç—å
    log("üìã –ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å Basic Auth, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    log("   python3 enable_basic_auth.py disable")
    
    print()
    
    log("üîß MIDDLEWARE –ö–û–ú–ü–û–ù–ï–ù–¢–´:")
    log("   ‚úÖ BasicAuthMiddleware - –ø—Ä–æ–≤–µ—Ä–∫–∞ HTTP Basic –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤")
    log("   ‚úÖ –ò—Å–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ (/static/*)")
    log("   ‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç timing –∞—Ç–∞–∫ —Å secrets.compare_digest()")
    log("   ‚úÖ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ .env")
    
    print()
    
    log("üéØ –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê BASIC AUTH:")
    log("   ‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–ª–æ–π –∑–∞—â–∏—Ç—ã –ø–µ—Ä–µ–¥ JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π")
    log("   ‚Ä¢ –ó–∞—â–∏—â–∞–µ—Ç –æ—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏ –±–æ—Ç–æ–≤")
    log("   ‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    log("   ‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π HTTP –º–µ—Ö–∞–Ω–∏–∑–º")
    log("   ‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç —Å–æ –≤—Å–µ–º–∏ –±—Ä–∞—É–∑–µ—Ä–∞–º–∏")

def main():
    if not os.path.exists('backend/config.py'):
        log("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª backend/config.py")
        log("   –ó–∞–ø—É—Å–∫–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
        return
    
    demo_basic_auth()

if __name__ == "__main__":
    main()