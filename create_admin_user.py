#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è Reverse Proxy Monitor
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: python3 create_admin_user.py
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, '/opt/reverse-proxy-monitor')
os.chdir('/opt/reverse-proxy-monitor')

try:
    from backend.database import SessionLocal, engine
    from backend.models import User
    from backend.auth import get_password_hash
    from sqlalchemy.orm import Session
    
    def create_admin():
        """–°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        db = SessionLocal()
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ admin
            existing_admin = db.query(User).filter(User.username == "admin").first()
            
            if existing_admin:
                print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä admin —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                print(f"   ID: {existing_admin.id}")
                print(f"   Email: {existing_admin.email}")
                print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {existing_admin.is_active}")
                print(f"   –ê–¥–º–∏–Ω: {existing_admin.is_admin}")
                return True
            
            # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
            admin_user = User(
                username="admin",
                email="admin@example.com", 
                password_hash=get_password_hash("admin123"),
                is_admin=True,
                is_active=True
            )
            
            db.add(admin_user)
            db.commit()
            db.refresh(admin_user)
            
            print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("   –õ–æ–≥–∏–Ω: admin")
            print("   –ü–∞—Ä–æ–ª—å: admin123")
            print(f"   ID: {admin_user.id}")
            print("   –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞!")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
            db.rollback()
            return False
        finally:
            db.close()
    
    if __name__ == "__main__":
        print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
        print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
        
        if create_admin():
            print("\nüéâ –ì–æ—Ç–æ–≤–æ! –ú–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É:")
            print("   http://–≤–∞—à-—Å–µ—Ä–≤–µ—Ä:5000/")
        else:
            print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            sys.exit(1)
            
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
    print("1. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
    print("   cd /opt/reverse-proxy-monitor")
    print("   source venv/bin/activate")
    print("   python3 create_admin_user.py")
    print("\n2. –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å –ø–æ–ª–Ω—ã–º –ø—É—Ç–µ–º:")
    print("   cd /opt/reverse-proxy-monitor")
    print("   ./venv/bin/python create_admin_user.py")
    sys.exit(1)
except Exception as e:
    print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
    sys.exit(1)