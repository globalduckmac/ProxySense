#!/bin/bash

###############################################################################
# –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –¥–ª—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç Pydantic –æ—à–∏–±–∫–∏ —Å Basic Auth –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
###############################################################################

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ root
if [[ $EUID -ne 0 ]]; then
    error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å sudo"
fi

log "üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è Basic Auth..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
cd /opt/reverse-proxy-monitor || error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /opt/reverse-proxy-monitor –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º backend/config.py
log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ config.py..."
cat > backend/config.py << 'EOF'
"""
Application configuration management.
"""
import os
from pydantic_settings import BaseSettings
from typing import List


class Settings(BaseSettings):
    """Application settings."""
    
    # Database
    DATABASE_URL: str = "sqlite:///./app.db"
    
    # Security
    SECRET_KEY: str = "dev-secret-key-change-in-production"
    JWT_SECRET_KEY: str = "dev-jwt-secret-key-change-in-production"
    ENCRYPTION_KEY: str = ""
    ALGORITHM: str = "HS256"
    ACCESS_TOKEN_EXPIRE_MINUTES: int = 30
    ENCRYPTION_KEY_PATH: str = "./encryption.key"
    
    # Application
    DEBUG: bool = True
    ENVIRONMENT: str = "development"
    LOG_LEVEL: str = "INFO"
    
    # Database Pool Settings
    DB_POOL_SIZE: int = 20
    DB_MAX_OVERFLOW: int = 30
    DB_POOL_TIMEOUT: int = 60
    
    # Cookie Settings
    COOKIE_SECURE: bool = False
    COOKIE_SAMESITE: str = "lax"
    
    # Monitoring Settings
    SERVER_CHECK_INTERVAL: int = 300
    NS_CHECK_INTERVAL: int = 3600
    ALERT_COOLDOWN: int = 1800
    
    # Telegram
    TELEGRAM_BOT_TOKEN: str = ""
    TELEGRAM_CHAT_ID: str = ""
    
    # SSH
    SSH_TIMEOUT: int = 30
    SSH_CONNECT_TIMEOUT: int = 10
    
    # Glances
    GLANCES_POLL_INTERVAL: int = 60
    GLANCES_TIMEOUT: int = 10
    GLANCES_MAX_FAILURES: int = 3
    
    # DNS
    DNS_TIMEOUT: int = 5
    DNS_SERVERS: str = "8.8.8.8,1.1.1.1"
    
    # Basic Authentication (–¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞—â–∏—Ç—ã)
    BASIC_AUTH_ENABLED: bool = False
    BASIC_AUTH_USERNAME: str = "admin"
    BASIC_AUTH_PASSWORD: str = "secret"
    
    class Config:
        env_file = ".env"
    
    @property
    def dns_servers_list(self) -> List[str]:
        """Get DNS servers as a list."""
        return [server.strip() for server in self.DNS_SERVERS.split(",")]


# Global settings instance
settings = Settings()
EOF

# –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env (–æ–Ω–∏ —Ç–µ–ø–µ—Ä—å –∏–º–µ—é—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
log "–û—á–∏—Å—Ç–∫–∞ .env –æ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö..."
if [[ -f .env ]]; then
    sed -i '/^BASIC_AUTH_ENABLED=/d' .env
    sed -i '/^BASIC_AUTH_USERNAME=/d' .env
    sed -i '/^BASIC_AUTH_PASSWORD=/d' .env
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
systemctl restart reverse-proxy-monitor

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
sleep 3
if systemctl is-active --quiet reverse-proxy-monitor; then
    log "‚úÖ –°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
    log "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://$(hostname -I | awk '{print $1}')"
    log "üîë –õ–æ–≥–∏–Ω: admin / –ü–∞—Ä–æ–ª—å: admin123"
else
    error "‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: sudo journalctl -u reverse-proxy-monitor -f"
fi

log "üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ!"